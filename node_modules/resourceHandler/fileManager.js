var fs = require('fs');
var dest = require('./dest/file.js');
var encoding = 'utf8';
/*
    TODO Error handling
    file write is not save - it could be outsynced if two writes to the content
*/
var fileMgr =  {};
fileMgr.readFile = function(file,callbackJSON){
    var file = file;
    var cb = callbackJSON;
    fs.exists(file,function(exists){
        if(exists){
            fs.readFile(file,encoding, function (err, data) {
                if (err) throw err;
                cb(getObject(data));
            });
        }
    })
}

fileMgr.writeFile = function(file,key,value,callback){
    var file = file,key = key, value = value;
    var cb = callback; 
    var reg = new RegExp('(.*)'+key+'=(.*)([\n\r]*.*)','g');

    fs.exists(file,function(exists){
        if(!exists){
            fs.openSync(file, 'w');
        }
        fs.readFile(file,encoding, function (err, data) {
            if (err) throw err;
            var result = data.replace(reg,'$1'+key+'='+value+'$3');

            console.log("writeFile result: "+result);
            console.log('\n');
            console.log("writeFile data: "+data);

            if(result == ''){
                console.log("writeFile result is empty: ");
                result=key+"="+value;
            } else if(result == data){
                result += '\n'+key+"="+value;
            }

            fs.writeFile(file,result,encoding,function(err){
                if (err) return console.log(err);
                cb(key,value);
            });
        });

    })
}

var getObject = function(data){
    var reg = new RegExp('#.*[\n\r]*|([a-zA-Z\d_\.]*)=(.*)[\n\r]*','g');
    var match = data.split(reg);
    var tmp; 
    var list = [];
    for (var i = 0; i < match.length-1; i+=3) {
        if(match[i] == undefined || match[i+1] == undefined || match[i+2] == undefined){console.log('SKIP COMMENT');continue;}
        console.log("-------- "+ i +" ------------");
        console.log(match[i]+" : "+match[i+2])
        console.log('\n'+match[i+1])
        tmp = match[i].length > 0 ?match[i]:match[i+1];
        list.push({
            key : tmp,
            data: match[i+2]
        });
    }
    return {data : list};
}

module.exports = fileMgr;
